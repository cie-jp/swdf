/***************************************************************** 
 *
 * LU分解
 *
 *
 *                           Created  by Mamoru Ota (2018/03/09)
 * 
 *****************************************************************/

#include"common.h"

INT  T__MATRIX_LU_DECOMPOSITION(TYPE A[],//(out,in) [n * n] : 入力正方行列, LU分解結果が格納される
                                INT  n){ //(in)             : 行列の次元数
  INT  i,j,k;
  TYPE tmp;
  
  // ****************************************************************
  // 引数チェック
  // ****************************************************************
  if((A == NULL) || (n < 1)){
    ERROR__SHOW("#1");
    return -1;
  }
  // ****************************************************************
  // LU分解
  // ****************************************************************
  for(k = 0;k < n - 1;k++){
    // **************************************************************
    // 行列の更新
    // **************************************************************
    for(i = k + 1;i < n;i++){
      tmp = A[k * n + k];
      if(T__EQ(tmp,T__ZERO)){
        ERROR__SHOW("#2");
	return -1;
      }
      tmp          = T__DIV(A[i * n + k],tmp);      
      A[i * n + k] = tmp;
      for(j = k + 1;j < n;j++){
	A[i * n + j] = T__FMA(T__NEGATIVE(tmp),A[k * n + j],A[i * n + j]);
      }
    }
  }
  return 0;
}
